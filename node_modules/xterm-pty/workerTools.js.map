{"version":3,"file":"workerTools.js","mappings":"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","sources":["webpack://xterm-pty/webpack/universalModuleDefinition","webpack://xterm-pty/./src/emscriptenHack.ts","webpack://xterm-pty/./src/termios.ts","webpack://xterm-pty/./src/ttyClient.ts","webpack://xterm-pty/./src/workerTools.ts","webpack://xterm-pty/webpack/bootstrap","webpack://xterm-pty/webpack/startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(self, () => {\nreturn ","// emscriptenHack intercepts some syscalls from Emscripten runtime by\n// rewriting some internal functions in Emscripten runtime.\n// Unfortunately, it is very fragile. We tested it with Emscripten 2.0.13.\n\nimport { Termios, dataToTermios, termiosToData } from \"./termios\";\n\ndeclare const self: {\n  Module: any;\n  FS: any;\n  TTY: any;\n  ENV: any;\n  asmLibraryArg: any;\n  wasmImports: any;\n  SYSCALLS: any;\n  HEAP32: Int32Array;\n} & typeof globalThis;\n\ninterface Client {\n  onRead: (length?: number) => number[];\n  onWrite: (buf: number[]) => void;\n  onWaitForReadable: (timeout: number) => boolean;\n  onIoctlTcgets: () => Termios;\n  onIoctlTcsets: (termios: Termios) => void;\n  onIoctlTiocgwinsz: () => [number, number];\n}\n\nexport const emscriptenHack = (client: Client) => {\n  if (self.ENV) self.ENV[\"TERM\"] = \"xterm-256color\";\n\n  const buf: number[] = [];\n  let firstByteRead = false;\n\n  const myRead = (\n    stream: any,\n    buffer: any,\n    offset: any,\n    length: number,\n    pos: any\n  ) => {\n    firstByteRead = false;\n    return originalRead(stream, buffer, offset, length, pos);\n  };\n\n  const myGetchar = () => {\n    if (buf.length == 0) {\n      if (firstByteRead) {\n        // End this read syscall as we have already read some bytes\n        return null;\n      } else {\n        // Wait synchronously as we have not returned any byte yet with this read syscall\n        buf.push(...client.onRead());\n      }\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const c = buf.shift()!;\n    firstByteRead = true;\n    return c < 128 ? c : c - 256;\n  };\n\n  const myPutchar = (_tty: any, val: number | null) => {\n    if (typeof val == \"number\") client.onWrite([(val + 256) % 256]);\n  };\n\n  const myPoll = (_stream: any, timeval: number) => {\n    const readable = client.onWaitForReadable(timeval / 1000);\n    return readable ? 5 /* readable & writable */ : 4 /* only writable */;\n  };\n\n  const originalRead = self.TTY.stream_ops.read;\n  self.TTY.stream_ops.read = myRead;\n  self.TTY.default_tty_ops.get_char = myGetchar;\n  self.TTY.default_tty_ops.put_char = myPutchar;\n  self.TTY.default_tty1_ops.put_char = myPutchar;\n\n  self.TTY.stream_ops.poll = myPoll;\n\n  if (self.TTY.default_tty_ops.ioctl_tcgets) {\n    // for emscripten 3.1.42 or later\n    // https://github.com/emscripten-core/emscripten/pull/19499\n    self.TTY.default_tty_ops.ioctl_tcgets = (_stream: any) => {\n      const termios = client.onIoctlTcgets();\n      const data = {\n        c_iflag: termios.iflag,\n        c_oflag: termios.oflag,\n        c_cflag: termios.cflag,\n        c_lflag: termios.lflag,\n        c_cc: termios.cc,\n      }\n      return data;\n    };\n\n    self.TTY.default_tty_ops.ioctl_tcsets = (_stream: any, _optional_actions: \"\" | \"F\", data: any) => {\n      const termios = new Termios(data.c_iflag, data.c_oflag, data.c_cflag, data.c_lflag, data.c_cc);\n      client.onIoctlTcsets(termios);\n      return 0;\n    };\n\n    self.TTY.default_tty_ops.ioctl_tiocgwinsz = (_stream: any) => {\n      const [rows, cols] = client.onIoctlTiocgwinsz();\n      return [cols, rows];\n    };\n  }\n  else {\n    // for emscripten 3.1.41 or before\n    const myIoctlTcgets = () => {\n      const termios = client.onIoctlTcgets();\n      const addr = self.SYSCALLS.get();\n      self.HEAP32.set(termiosToData(termios), addr >> 2);\n    };\n\n    const myIoctlTcsets = () => {\n      const addr = self.SYSCALLS.get();\n      const data = Array.from(self.HEAP32.slice(addr >> 2, (addr >> 2) + 13));\n      client.onIoctlTcsets(dataToTermios(data));\n    };\n\n    const myIoctlTiocgwinsz = () => {\n      const [rows, cols] = client.onIoctlTiocgwinsz();\n      const argp = self.SYSCALLS.get();\n      const addr = argp >> 2;\n      self.HEAP32[addr] = cols + (rows << 16);\n    };\n\n    const myIoctl = (fd: number, op: number, varargs: any) => {\n      self.SYSCALLS.varargs = varargs;\n      switch (op) {\n        case 0x5401: // TCGETS\n          myIoctlTcgets();\n          return 0;\n        case 0x5402: // TCSETS\n        case 0x5403: // TCSETSW\n        case 0x5404: // TCSETSF\n          myIoctlTcsets();\n          return 0;\n        case 0x540b: // TCFLSH\n          return 0;\n        case 0x5413: // TIOCGWINSZ\n          myIoctlTiocgwinsz();\n          return 0;\n        default:\n          return originalIoctl(fd, op, varargs);\n      }\n    };\n\n    const myNewselect = (\n      nfds: number,\n      readfds: number,\n      writefds: number,\n      exceptfds: number,\n      timeout: number\n    ) => {\n      try {\n        const readHeap = (addr: number): number[] => {\n          return addr\n            ? Array.from(self.HEAP32.slice(addr >> 2, (addr >> 2) + 2))\n            : [0, 0];\n        };\n        const writeHeap = (addr: number, val: number[]) => {\n          if (addr) self.HEAP32.set(val, addr >> 2);\n        };\n\n        const srcRead = readHeap(readfds);\n        const srcWrite = readHeap(writefds);\n        const srcExcept = readHeap(exceptfds);\n        const [timevalLow, timevalHigh] = readHeap(timeout);\n        const timeval = timeout ? (timevalLow + timevalHigh / 1000000) * 1000 : -1;\n\n        let total = 0;\n\n        const check = (src: number[], fd: number) => {\n          return src[Math.floor(fd / 32)] & (1 << fd % 32);\n        };\n        const update = (dst: number[], fd: number) => {\n          dst[Math.floor(fd / 32)] |= 1 << fd % 32;\n          total++;\n        };\n\n        const dstRead = [0, 0];\n        const dstWrite = [0, 0];\n        const dstExcept = [0, 0];\n\n        for (let fd = 0; fd < nfds; fd++) {\n          const stream = self.FS.getStream(fd);\n          if (!stream) throw new self.FS.ErrnoError(8);\n\n          const flags = stream.stream_ops.poll\n            ? stream.stream_ops.poll(stream, timeval)\n            : self.SYSCALLS.DEFAULT_POLLMASK;\n\n          if (flags & 1 && check(srcRead, fd)) update(dstRead, fd);\n          if (flags & 4 && check(srcWrite, fd)) update(dstWrite, fd);\n          if (flags & 2 && check(srcExcept, fd)) update(dstExcept, fd);\n        }\n\n        writeHeap(readfds, dstRead);\n        writeHeap(writefds, dstWrite);\n        writeHeap(exceptfds, dstExcept);\n\n        return total;\n      } catch (e: any) {\n        if (typeof self.FS === \"undefined\" || !(e instanceof self.FS.ErrnoError))\n          throw e;\n        return -e.errno;\n      }\n    };\n\n    const imports = self.asmLibraryArg || self.wasmImports;\n    let ioctlKey = \"dummy\";\n    let newselectKey = \"dummy\";\n    for (const key in imports) {\n      if (\n        key == \"__syscall_ioctl\" ||\n        key == \"__sys_ioctl\" ||\n        imports[key].name == \"___syscall_ioctl\" ||\n        imports[key].name == \"___sys_ioctl\"\n      ) {\n        ioctlKey = key;\n      }\n      if (\n        key == \"__syscall_newselect\" ||\n        key == \"__sys__newselect\" ||\n        imports[key].name == \"___syscall__newselect\" ||\n        imports[key].name == \"___sys__newselect\"\n      ) {\n        newselectKey = key;\n      }\n    }\n\n    if (ioctlKey == \"dummy\") {\n      console.warn(\"failed to overwrite __syscall_ioctl of emscripten\");\n    }\n\n    if (newselectKey == \"dummy\") {\n      console.warn(\"failed to overwrite __syscall_newselect of emscripten\");\n    }\n\n    const originalIoctl = imports[ioctlKey];\n    imports[ioctlKey] = myIoctl;\n    imports[newselectKey] = myNewselect;\n  }\n};\n","// This module provides a Termios class for termios struct data.\n//\n// https://man7.org/linux/man-pages/man3/termios.3.html\n\n// c_iflag\nexport const ISTRIP = 0x0020;\nexport const INLCR = 0x0040;\nexport const IGNCR = 0x0080;\nexport const ICRNL = 0x0100;\nexport const IUCLC = 0x0200;\nexport const IXON = 0x0400;\nexport const IXANY = 0x0800;\nexport const IMAXBEL = 0x2000;\nexport const IUTF8 = 0x4000;\n\n// c_oflag\nexport const OPOST = 0x0001;\nexport const OLCUC = 0x0002;\nexport const ONLCR = 0x0004;\nexport const OCRNL = 0x0008;\nexport const ONOCR = 0x0010;\nexport const ONLRET = 0x0020;\nexport const TABDLY = 0x1800;\nexport const XTABS = 0x1800;\n\n// c_lflag\nexport const ISIG = 0x0001;\nexport const ICANON = 0x0002;\nexport const ECHO = 0x0008;\nexport const ECHOE = 0x0010;\nexport const ECHOK = 0x0020;\nexport const ECHONL = 0x0040;\nexport const NOFLSH = 0x0080;\nexport const ECHOCTL = 0x0200;\nexport const ECHOPRT = 0x0400;\nexport const ECHOKE = 0x0800;\nexport const IEXTEN = 0x8000;\n\n// c_cc\nexport const VINTR = 0;\nexport const VQUIT = 1;\nexport const VERASE = 2;\nexport const VKILL = 3;\nexport const VEOF = 4;\nexport const VTIME = 5;\nexport const VMIN = 6;\nexport const VSWTCH = 7;\nexport const VSTART = 8;\nexport const VSTOP = 9;\nexport const VSUSP = 10;\nexport const VEOL = 11;\nexport const VREPRINT = 12;\nexport const VDISCARD = 13;\nexport const VWERASE = 14;\nexport const VLNEXT = 15;\nexport const VEOL2 = 16;\n\nexport class Termios {\n  constructor(\n    readonly iflag: number,\n    readonly oflag: number,\n    readonly cflag: number,\n    readonly lflag: number,\n    readonly cc: number[]\n  ) {}\n\n  readonly ISTRIP_P = (this.iflag & ISTRIP) != 0;\n  readonly INLCR_P = (this.iflag & INLCR) != 0;\n  readonly IGNCR_P = (this.iflag & IGNCR) != 0;\n  readonly ICRNL_P = (this.iflag & ICRNL) != 0;\n  readonly IUCLC_P = (this.iflag & IUCLC) != 0;\n  readonly IXON_P = (this.iflag & IXON) != 0;\n  readonly IXANY_P = (this.iflag & IXANY) != 0;\n  readonly IUTF8_P = (this.iflag & IUTF8) != 0;\n  readonly OPOST_P = (this.oflag & OPOST) != 0;\n  readonly OLCUC_P = (this.oflag & OLCUC) != 0;\n  readonly ONLCR_P = (this.oflag & ONLCR) != 0;\n  readonly OCRNL_P = (this.oflag & OCRNL) != 0;\n  readonly ONOCR_P = (this.oflag & ONOCR) != 0;\n  readonly ONLRET_P = (this.oflag & ONLRET) != 0;\n  readonly TABDLY_XTABS_P = (this.oflag & TABDLY) == XTABS;\n  readonly ISIG_P = (this.lflag & ISIG) != 0;\n  readonly ICANON_P = (this.lflag & ICANON) != 0;\n  readonly ECHO_P = (this.lflag & ECHO) != 0;\n  readonly ECHOE_P = (this.lflag & ECHOE) != 0;\n  readonly ECHOK_P = (this.lflag & ECHOK) != 0;\n  readonly ECHONL_P = (this.lflag & ECHONL) != 0;\n  readonly NOFLSH_P = (this.lflag & NOFLSH) != 0;\n  readonly ECHOCTL_P = (this.lflag & ECHOCTL) != 0;\n  readonly ECHOPRT_P = (this.lflag & ECHOPRT) != 0;\n  readonly ECHOKE_P = (this.lflag & ECHOKE) != 0;\n  readonly IEXTEN_P = (this.lflag & IEXTEN) != 0;\n\n  readonly INTR_V = this.cc[VINTR];\n  readonly QUIT_V = this.cc[VQUIT];\n  readonly ERASE_V = this.cc[VERASE];\n  readonly KILL_V = this.cc[VKILL];\n  readonly EOF_V = this.cc[VEOF];\n  readonly TIME_V = this.cc[VTIME]; // not supported\n  readonly MIN_V = this.cc[VMIN]; // not supported\n  readonly SWTCH_V = this.cc[VSWTCH]; // not supported\n  readonly START_V = this.cc[VSTART];\n  readonly STOP_V = this.cc[VSTOP];\n  readonly SUSP_V = this.cc[VSUSP];\n  readonly EOL_V = this.cc[VEOL];\n  readonly REPRINT_V = this.cc[VREPRINT];\n  readonly DISCARD_V = this.cc[VDISCARD]; // not supported\n  readonly WERASE_V = this.cc[VWERASE];\n  readonly LNEXT_V = this.cc[VLNEXT];\n  readonly EOL2_V = this.cc[VEOL2];\n\n  clone() {\n    return new Termios(\n      this.iflag,\n      this.oflag,\n      this.cflag,\n      this.lflag,\n      this.cc.concat()\n    );\n  }\n}\n\nexport const defaultTermios = new Termios(\n  ICRNL | IXON | IMAXBEL | IUTF8,\n  OPOST | ONLCR,\n  0x00bf, // c_cflag is not supported\n  ISIG | ICANON | ECHO | ECHOE | ECHOK | ECHOCTL | ECHOKE | IEXTEN,\n  [\n    0x03, 0x1c, 0x7f, 0x15, 0x04, 0x00, 0x01, 0x00, 0x11, 0x13, 0x1a, 0x00,\n    0x12, 0x0f, 0x17, 0x16, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n  ]\n);\n\nexport const termiosToData = (termios: Termios) => {\n  const data = [termios.iflag, termios.oflag, termios.cflag, termios.lflag];\n  let word = 0;\n  let offset = 8;\n  for (let i = 0; i < termios.cc.length; i++) {\n    word |= termios.cc[i] << offset;\n    offset += 8;\n    if (offset == 32) {\n      data.push(word);\n      word = 0;\n      offset = 0;\n    }\n  }\n  data.push(word);\n  return data;\n};\n\nexport const dataToTermios = (data: number[]): Termios => {\n  const cc: number[] = [];\n  let ptr = 4;\n  let word = data[ptr++];\n  let offset = 8;\n  for (let i = 0; i < 32; i++) {\n    cc.push((word >> offset) & 0xff);\n    offset += 8;\n    if (offset >= 32) {\n      word = data[ptr++];\n      offset = 0;\n    }\n  }\n  return new Termios(data[0], data[1], data[2], data[3], cc);\n};\n","// This module provides a \"TtyClient\" class.\n//\n// This code runs in a Web Worker thread.\n// It sends TTY requests to TtyServer that works in the main thread.\n// The communication is based on Worker.postmessage and SharedArrayBuffer.\n\nimport { Termios, dataToTermios, termiosToData } from \"./termios\";\nimport { TtyRequest } from \"./ttyServer\";\n\nexport class TtyClient {\n  private streamCtrl: Int32Array;\n  private streamData: Int32Array;\n\n  constructor(shared: SharedArrayBuffer) {\n    this.streamCtrl = new Int32Array(shared, 0, 1);\n    this.streamData = new Int32Array(shared, 4);\n  }\n\n  private req(r: TtyRequest) {\n    this.streamCtrl[0] = 0;\n    self.postMessage(r);\n    Atomics.wait(this.streamCtrl, 0, 0);\n  }\n\n  onRead(length: number | undefined) {\n    if (!length) length = this.streamData.length - 1;\n    this.req({ ttyRequestType: \"read\", length });\n    const len = this.streamData[0];\n    return Array.from(this.streamData.slice(1, len + 1));\n  }\n\n  onWrite(buf: number[]) {\n    this.req({ ttyRequestType: \"write\", buf });\n  }\n\n  onWaitForReadable(timeout: number) {\n    this.req({ ttyRequestType: \"poll\", timeout });\n    return this.streamData[0] == 1;\n  }\n\n  onIoctlTcgets() {\n    this.req({ ttyRequestType: \"tcgets\" });\n    return dataToTermios(Array.from(this.streamData.slice(0, 13)));\n  }\n\n  onIoctlTcsets(termios: Termios) {\n    const data = termiosToData(termios);\n    this.req({ ttyRequestType: \"tcsets\", data });\n  }\n\n  onIoctlTiocgwinsz() {\n    this.req({ ttyRequestType: \"tiocgwinsz\" });\n    return [this.streamData[0], this.streamData[1]];\n  }\n}\n","export * from \"./emscriptenHack\";\nexport * from \"./ttyClient\";\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(852);\n"],"names":["root","factory","exports","module","define","amd","a","i","self","emscriptenHack","client","ENV","buf","firstByteRead","myPutchar","_tty","val","onWrite","originalRead","TTY","stream_ops","read","stream","buffer","offset","length","pos","default_tty_ops","get_char","push","onRead","c","shift","put_char","default_tty1_ops","poll","_stream","timeval","onWaitForReadable","ioctl_tcgets","termios","onIoctlTcgets","c_iflag","iflag","c_oflag","oflag","c_cflag","cflag","c_lflag","lflag","c_cc","cc","ioctl_tcsets","_optional_actions","data","Termios","onIoctlTcsets","ioctl_tiocgwinsz","onIoctlTiocgwinsz","rows","imports","asmLibraryArg","wasmImports","ioctlKey","newselectKey","key","name","console","warn","fd","op","varargs","SYSCALLS","addr","get","HEAP32","set","termiosToData","Array","from","slice","dataToTermios","cols","nfds","readfds","writefds","exceptfds","timeout","readHeap","writeHeap","srcRead","srcWrite","srcExcept","timevalLow","timevalHigh","check","src","Math","floor","update","dst","dstRead","dstWrite","dstExcept","FS","getStream","ErrnoError","flags","DEFAULT_POLLMASK","e","errno","ISTRIP","INLCR","IGNCR","ICRNL","IUCLC","IXON","IXANY","IMAXBEL","IUTF8","OPOST","OLCUC","ONLCR","OCRNL","ONOCR","ONLRET","TABDLY","XTABS","ISIG","ICANON","ECHO","ECHOE","ECHOK","ECHONL","NOFLSH","ECHOCTL","ECHOPRT","ECHOKE","IEXTEN","VINTR","VQUIT","VERASE","VKILL","VEOF","VTIME","VMIN","VSWTCH","VSTART","VSTOP","VSUSP","VEOL","VREPRINT","VDISCARD","VWERASE","VLNEXT","VEOL2","ISTRIP_P","this","INLCR_P","IGNCR_P","ICRNL_P","IUCLC_P","IXON_P","IXANY_P","IUTF8_P","OPOST_P","OLCUC_P","ONLCR_P","OCRNL_P","ONOCR_P","ONLRET_P","TABDLY_XTABS_P","ISIG_P","ICANON_P","ECHO_P","ECHOE_P","ECHOK_P","ECHONL_P","NOFLSH_P","ECHOCTL_P","ECHOPRT_P","ECHOKE_P","IEXTEN_P","INTR_V","QUIT_V","ERASE_V","KILL_V","EOF_V","TIME_V","MIN_V","SWTCH_V","START_V","STOP_V","SUSP_V","EOL_V","REPRINT_V","DISCARD_V","WERASE_V","LNEXT_V","EOL2_V","clone","concat","defaultTermios","word","ptr","shared","streamCtrl","Int32Array","streamData","req","r","postMessage","Atomics","wait","ttyRequestType","len","TtyClient","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","call"],"sourceRoot":""}